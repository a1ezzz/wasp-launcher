@startuml

package "Host Apps" {
component log [
WLogHostApp
"com.binblob.wasp-launcher.host-app.log"
]

component config [
WConfigHostApp
"com.binblob.wasp-launcher.host-app.config"
]

component debugger [
WGuestAppWebDebugger
"com.binblob.wasp-launcher.host-app.web-debugger"
]

component web_init [
WWebInitHostApp
"com.binblob.wasp-launcher.host-app.web::init"
]

component broker_init [
WBrokerInitHostApp
"com.binblob.wasp-launcher.host-app.broker::init"
]

component scheduler_init [
WSchedulerInitHostApp
"com.binblob.wasp-launcher.host-app.scheduler::init"
]

component starter [
WGuestAppStarter
"com.binblob.wasp-launcher.host-app.guest-apps"
]

component model [
WGuestModelLoadApp
"com.binblob.wasp-launcher.host-app.model-load"
]

component template [
WTemplateLoadHostApp
"com.binblob.wasp-launcher.host-app.template-load"
]

component broker_start [
WBrokerHostApp
"com.binblob.wasp-launcher.host-app.broker::start"
]

component scheduler_start [
WSchedulerHostApp
"com.binblob.wasp-launcher.host-app.scheduler::start"
]

component web_start [
WWebHostApp
"com.binblob.wasp-launcher.host-app.web::start"
]

config .-down-> log
debugger .-down-> config
web_init .-down-> config
broker_init .-down-> config
scheduler_init .-down-> config

starter .-down-> web_init
starter .-down-> broker_init
starter .-down-> scheduler_init

model .-down-> starter
template .-down-> starter
broker_start .-down-> starter
scheduler_start .-down-> starter

web_start .-down-> model
web_start .-down-> template
web_start .-down-> broker_start
web_start .-down-> scheduler_start

}

@enduml
