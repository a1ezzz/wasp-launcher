@startuml

package "Host Apps" {
component log [
WLauncherLogSetupApp
"com.binblob.wasp-launcher.launcher.log::log_setup"
]

component config [
WLauncherConfigApp
"com.binblob.wasp-launcher.launcher.config::read_config"
]

component loader [
WLauncherAppLoaderApp
"com.binblob.wasp-launcher.launcher.app_loader::load"
]

component model [
WLauncherModelLoadApp
"com.binblob.wasp-launcher.launcher.model::init"
]

component starter [
WLauncherAppStarterApp
"com.binblob.wasp-launcher.launcher.app_starter::start"
]

note left of starter
App is started in a separate thread
end note

component template [
WLauncherWebTemplatesApp
"com.binblob.wasp-launcher.launcher.web_templates::load"
]

component debugger [
WLauncherWebDebuggerConnectionApp
"com.binblob.wasp-launcher.launcher.web_debugger::connection"
]

component broker [
WLauncherBrokerApp
"com.binblob.wasp-launcher.launcher.broker::broker_start"
]

component web_host [
WWebServiceStartApp
"com.binblob.wasp-launcher.launcher.web_service::start"
]

config .-down-> log
loader .-down-> config
model .-down-> loader
template .-down-> loader
starter .-down-> model
broker .-down-> starter
web_host .-down-> broker
web_host .-down-> template
debugger .-down-> loader

}

package "Guest Apps" {
component guest_apps [
	Guest applications
]

loader -> guest_apps: load
starter -> guest_apps: start
}

@enduml
