@startuml

package "Host Apps" {
component log [
WLogHostApp
"com.binblob.wasp-launcher.host-app.log"
]

component config [
WConfigHostApp
"com.binblob.wasp-launcher.host-app.config"
]

component loader [
WGuestAppLoader
"com.binblob.wasp-launcher.host-app.guest-apps::load"
]

component model [
WGuestModelLoadApp
"com.binblob.wasp-launcher.host-app.model-load"
]

component web_init [
WWebInitHostApp
"com.binblob.wasp-launcher.host-app.web::init"
]

component starter [
WGuestAppStarter
"com.binblob.wasp-launcher.launcher.app_starter::start"
]

note left of starter
App is started in a separate thread
end note

component template [
WTemplateLoadHostApp
"com.binblob.wasp-launcher.host-app.template-load"
]

component debugger [
WGuestAppWebDebugger
"com.binblob.wasp-launcher.host-app.web-debugger"
]

component broker [
WBrokerHostApp
"com.binblob.wasp-launcher.host-app.broker"
]

component web_host [
WWebHostApp
"com.binblob.wasp-launcher.host-app.web::start"
]

config .-down-> log
loader .-down-> config
model .-down-> loader
template .-down-> loader
web_init .-down-> loader
starter .-down-> web_init
starter .-down-> model
broker .-down-> starter
web_host .-down-> broker
web_host .-down-> template
debugger .-down-> config

}

package "Guest Apps" {
component guest_apps [
	Guest applications
]

loader -> guest_apps: load
starter -> guest_apps: start
}

@enduml
